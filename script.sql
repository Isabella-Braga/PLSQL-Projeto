-- Criação das tabelas
CREATE TABLE ALUNO (
    ID_ALUNO NUMBER PRIMARY KEY,
    NOME VARCHAR2(100),
    DATA_NASCIMENTO DATE,
    ID_CURSO NUMBER
);

CREATE TABLE DISCIPLINA (
    ID_DISCIPLINA NUMBER PRIMARY KEY,
    NOME VARCHAR2(100),
    DESCRICAO VARCHAR2(200),
    CARGA_HORARIA NUMBER
);

CREATE TABLE PROFESSOR (
    ID_PROFESSOR NUMBER PRIMARY KEY,
    NOME VARCHAR2(100)
);

CREATE TABLE MATRICULA (
    ID_MATRICULA NUMBER PRIMARY KEY,
    ID_ALUNO NUMBER,
    ID_DISCIPLINA NUMBER,
    DATA_MATRICULA DATE,
    FOREIGN KEY (ID_ALUNO) REFERENCES ALUNO(ID_ALUNO),
    FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA)
);

CREATE TABLE TURMA (
    ID_TURMA NUMBER PRIMARY KEY,
    ID_DISCIPLINA NUMBER,
    ID_PROFESSOR NUMBER,
    FOREIGN KEY (ID_DISCIPLINA) REFERENCES DISCIPLINA(ID_DISCIPLINA),
    FOREIGN KEY (ID_PROFESSOR) REFERENCES PROFESSOR(ID_PROFESSOR)
);

-- Criação das sequências
CREATE SEQUENCE SEQ_ALUNO START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_DISCIPLINA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_PROFESSOR START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_MATRICULA START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE SEQ_TURMA START WITH 1 INCREMENT BY 1;

-- Pacote PKG_ALUNO
CREATE OR REPLACE PACKAGE PKG_ALUNO AS
    PROCEDURE EXCLUIR_ALUNO(ID_ALUNO IN NUMBER);
    FUNCTION LISTAR_ALUNOS_MAIORES RETURN SYS_REFCURSOR;
    FUNCTION LISTAR_ALUNOS_POR_CURSO(ID_CURSO IN NUMBER) RETURN SYS_REFCURSOR;
END PKG_ALUNO;
/

CREATE OR REPLACE PACKAGE BODY PKG_ALUNO AS
    PROCEDURE EXCLUIR_ALUNO(ID_ALUNO IN NUMBER) IS
    BEGIN
        DELETE FROM MATRICULA WHERE ID_ALUNO = ID_ALUNO;
        DELETE FROM ALUNO WHERE ID_ALUNO = ID_ALUNO;
    END EXCLUIR_ALUNO;

    FUNCTION LISTAR_ALUNOS_MAIORES RETURN SYS_REFCURSOR IS
        CURSOR ALUNOS_CUR IS
        SELECT NOME, DATA_NASCIMENTO
        FROM ALUNO
        WHERE TRUNC(MONTHS_BETWEEN(SYSDATE, DATA_NASCIMENTO) / 12) > 18;
        ALUNOS SYS_REFCURSOR;
    BEGIN
        OPEN ALUNOS FOR ALUNOS_CUR;
        RETURN ALUNOS;
    END LISTAR_ALUNOS_MAIORES;

    FUNCTION LISTAR_ALUNOS_POR_CURSO(ID_CURSO IN NUMBER) RETURN SYS_REFCURSOR IS
        CURSOR CURSO_CUR IS
        SELECT NOME FROM ALUNO WHERE ID_CURSO = ID_CURSO;
        RESULTADO SYS_REFCURSOR;
    BEGIN
        OPEN RESULTADO FOR CURSO_CUR;
        RETURN RESULTADO;
    END LISTAR_ALUNOS_POR_CURSO;
END PKG_ALUNO;
/

-- Pacote PKG_DISCIPLINA
CREATE OR REPLACE PACKAGE PKG_DISCIPLINA AS
    PROCEDURE CADASTRAR_DISCIPLINA(NOME IN VARCHAR2, DESCRICAO IN VARCHAR2, CARGA_HORARIA IN NUMBER);
    FUNCTION TOTAL_ALUNOS_DISCIPLINA RETURN SYS_REFCURSOR;
    FUNCTION MEDIA_IDADE_POR_DISCIPLINA(ID_DISCIPLINA IN NUMBER) RETURN NUMBER;
    PROCEDURE LISTAR_ALUNOS_DISCIPLINA(ID_DISCIPLINA IN NUMBER);
END PKG_DISCIPLINA;
/

CREATE OR REPLACE PACKAGE BODY PKG_DISCIPLINA AS
    PROCEDURE CADASTRAR_DISCIPLINA(NOME IN VARCHAR2, DESCRICAO IN VARCHAR2, CARGA_HORARIA IN NUMBER) IS
    BEGIN
        INSERT INTO DISCIPLINA (ID_DISCIPLINA, NOME, DESCRICAO, CARGA_HORARIA)
        VALUES (SEQ_DISCIPLINA.NEXTVAL, NOME, DESCRICAO, CARGA_HORARIA);
    END CADASTRAR_DISCIPLINA;

    FUNCTION TOTAL_ALUNOS_DISCIPLINA RETURN SYS_REFCURSOR IS
        CURSOR TOTAL_CUR IS
        SELECT D.NOME, COUNT(M.ID_ALUNO) AS TOTAL_ALUNOS
        FROM DISCIPLINA D
        JOIN MATRICULA M ON D.ID_DISCIPLINA = M.ID_DISCIPLINA
        GROUP BY D.NOME
        HAVING COUNT(M.ID_ALUNO) > 10;
        RESULTADO SYS_REFCURSOR;
    BEGIN
        OPEN RESULTADO FOR TOTAL_CUR;
        RETURN RESULTADO;
    END TOTAL_ALUNOS_DISCIPLINA;

    FUNCTION MEDIA_IDADE_POR_DISCIPLINA(ID_DISCIPLINA IN NUMBER) RETURN NUMBER IS
        MEDIA_IDADE NUMBER;
    BEGIN
        SELECT AVG(TRUNC(MONTHS_BETWEEN(SYSDATE, A.DATA_NASCIMENTO) / 12))
        INTO MEDIA_IDADE
        FROM MATRICULA M
        JOIN ALUNO A ON M.ID_ALUNO = A.ID_ALUNO
        WHERE M.ID_DISCIPLINA = ID_DISCIPLINA;
        RETURN MEDIA_IDADE;
    END MEDIA_IDADE_POR_DISCIPLINA;

    PROCEDURE LISTAR_ALUNOS_DISCIPLINA(ID_DISCIPLINA IN NUMBER) IS
        CURSOR ALUNOS_CUR IS
        SELECT A.NOME
        FROM MATRICULA M
        JOIN ALUNO A ON M.ID_ALUNO = A.ID_ALUNO
        WHERE M.ID_DISCIPLINA = ID_DISCIPLINA;
    BEGIN
        FOR ALUNO IN ALUNOS_CUR LOOP
            DBMS_OUTPUT.PUT_LINE(ALUNO.NOME);
        END LOOP;
    END LISTAR_ALUNOS_DISCIPLINA;
END PKG_DISCIPLINA;
/

-- Pacote PKG_PROFESSOR
CREATE OR REPLACE PACKAGE PKG_PROFESSOR AS
    FUNCTION TOTAL_TURMAS_PROFESSOR(ID_PROFESSOR IN NUMBER) RETURN NUMBER;
    FUNCTION PROFESSOR_DA_DISCIPLINA(ID_DISCIPLINA IN NUMBER) RETURN VARCHAR2;
END PKG_PROFESSOR;
/

CREATE OR REPLACE PACKAGE BODY PKG_PROFESSOR AS
    FUNCTION TOTAL_TURMAS_PROFESSOR(ID_PROFESSOR IN NUMBER) RETURN NUMBER IS
        TOTAL NUMBER;
    BEGIN
        SELECT COUNT(*)
        INTO TOTAL
        FROM TURMA
        WHERE ID_PROFESSOR = ID_PROFESSOR;
        RETURN TOTAL;
    END TOTAL_TURMAS_PROFESSOR;

    FUNCTION PROFESSOR_DA_DISCIPLINA(ID_DISCIPLINA IN NUMBER) RETURN VARCHAR2 IS
        NOME_PROFESSOR VARCHAR2(100);
    BEGIN
        SELECT P.NOME
        INTO NOME_PROFESSOR
        FROM TURMA T
        JOIN PROFESSOR P ON T.ID_PROFESSOR = P.ID_PROFESSOR
        WHERE T.ID_DISCIPLINA = ID_DISCIPLINA;
        RETURN NOME_PROFESSOR;
    END PROFESSOR_DA_DISCIPLINA;
END PKG_PROFESSOR;
/
